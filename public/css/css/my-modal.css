body {
    --modal-light: hsl(220, 50%, 90%);
    --modal-primary: hsl(255, 30%, 55%);
    --modal-focus: #00efc4;     
    --modal-border-color: hsla(0, 0%, 100%, .2);
    --global-background: hsl(220, 25%, 10%);
    --modal-global-background: hsl(220, 25%, 10%);
    --modal-shadow-1: hsla(169, 100%, 47%, .3);
    --modal-shadow-2: hsla(169, 100%, 47%, .4);
}


/* modal */
.modal-container {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
  
    display: none;
    justify-content: center;
    align-items: center;
  
    width: 100%;
    height: 100%;
  
    /* --m-background is set as inline style */
    background: var(--m-background);
  }
  
  /* using :target */
  /*
  when users will click/enter button(link) browser will add a #id in a url and when that happens we'll show our users the modal that contains that id.
  */
  .modal-container:target {
    display: flex;
  }
  
  .modal {
    width: 60rem;
    padding: 4rem 2rem;
    border-radius: .8rem;
  
    color: var(--modal-light);
    background: var(--modal-global-background);
    box-shadow: var(--m-shadow, .4rem .4rem 10.2rem .2rem) var(--modal-shadow-1);
    position: relative;
  
    overflow: hidden;
  }
  
  .modal__text {
    padding: 0 4rem;
    margin-top: 4rem;
  
    font-size: 1.6rem;
    line-height: 2;
  }
  
  .modal__btn {
    margin-top: 4rem;
    padding: 1rem 1.6rem;
    border: 1px solid var(--modal-border-color);
    border-radius: 100rem;
  
    color: inherit;
    background: transparent;
    font-size: 1.4rem;
    font-family: inherit;
    letter-spacing: .2rem;
  
    transition: .2s;
    cursor: pointer;
  }
  
  .modal__btn:nth-of-type(1) {
    margin-right: 1rem;
  }
  
  .modal__btn:hover,
  .modal__btn:focus {
    background: var(--modal-focus);
    border-color: var(--modal-focus);
    transform: translateY(-.2rem);
  }
  
  .link-2 {
    width: 4rem;
    height: 4rem;
    border: 1px solid var(--modal-border-color);
    border-radius: 100rem;
  
    color: inherit;
    font-size: 2.2rem;
  
    position: absolute;
    top: 2rem;
    right: 2rem;
  
    display: flex;
    justify-content: center;
    align-items: center;
  
    transition: .2s;
  }
  
  .link-2::before {
    content: 'Ã—';
  
    transform: translateY(-.1rem);
  }
  
  .link-2:hover,
  .link-2:focus {
    background: var(--modal-focus);
    border-color: var(--modal-focus);
    transform: translateY(-.2rem);
  }
  

  /* Checkbox */

  /* <div class="checkbox-wrapper-33">
  <label class="checkbox">
    <input class="checkbox__trigger visuallyhidden" type="checkbox" />
    <span class="checkbox__symbol">
      <svg aria-hidden="true" class="icon-checkbox" width="28px" height="28px" viewBox="0 0 28 28" version="1" xmlns="http://www.w3.org/2000/svg">
        <path d="M4 14l8 7L24 7"></path>
      </svg>
    </span>
    <p class="checkbox__textwrapper">Checkbox</p>
  </label>
</div>

<style> */
  .checkbox-wrapper-33 {
    --s-xsmall: 0.625em;
    --s-small: 1.2em;
    --border-width: 1px;
    --c-primary: #00efc4;
    --c-primary-20-percent-opacity: rgb(0, 239, 196/ 20%);
    --c-primary-10-percent-opacity: rgb(0, 239, 196/ 10%);
    --t-base: 0.4s;
    --t-fast: 0.2s;
    --e-in: ease-in;
    --e-out: cubic-bezier(.11,.29,.18,.98);
  }

  .checkbox-wrapper-33 .visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }

  .checkbox-wrapper-33 .checkbox {
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
  .checkbox-wrapper-33 .checkbox + .checkbox {
    margin-top: var(--s-small);
  }
  .checkbox-wrapper-33 .checkbox__symbol {
    display: inline-block;
    display: flex;
    margin-right: calc(var(--s-small) * 0.7);
    border: var(--border-width) solid var(--c-primary);
    position: relative;
    border-radius: 0.1em;
    width: 1.5em;
    height: 1.5em;
    transition: box-shadow var(--t-base) var(--e-out), background-color var(--t-base);
    box-shadow: 0 0 0 0 var(--c-primary-10-percent-opacity);
  }
  .checkbox-wrapper-33 .checkbox__symbol:after {
    content: "";
    position: absolute;
    top: 0.5em;
    left: 0.5em;
    width: 0.25em;
    height: 0.25em;
    background-color: var(--c-primary-20-percent-opacity);
    opacity: 0;
    border-radius: 3em;
    transform: scale(1);
    transform-origin: 50% 50%;
  }
  .checkbox-wrapper-33 .checkbox .icon-checkbox {
    width: 1em;
    height: 1em;
    margin: auto;
    fill: none;
    stroke-width: 3;
    stroke: currentColor;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10;
    color: var(--c-primary);
    display: inline-block;
  }
  .checkbox-wrapper-33 .checkbox .icon-checkbox path {
    transition: stroke-dashoffset var(--t-fast) var(--e-in);
    stroke-dasharray: 30px, 31px;
    stroke-dashoffset: 31px;
  }
  .checkbox-wrapper-33 .checkbox__textwrapper {
    margin: 0;
  }
  .checkbox-wrapper-33 .checkbox__trigger:checked + .checkbox__symbol:after {
    -webkit-animation: ripple-33 1.5s var(--e-out);
            animation: ripple-33 1.5s var(--e-out);
  }
  .checkbox-wrapper-33 .checkbox__trigger:checked + .checkbox__symbol .icon-checkbox path {
    transition: stroke-dashoffset var(--t-base) var(--e-out);
    stroke-dashoffset: 0px;
  }
  .checkbox-wrapper-33 .checkbox__trigger:focus + .checkbox__symbol {
    box-shadow: 0 0 0 0.25em var(--c-primary-20-percent-opacity);
  }

  @-webkit-keyframes ripple-33 {
    from {
      transform: scale(0);
      opacity: 1;
    }
    to {
      opacity: 0;
      transform: scale(20);
    }
  }

  @keyframes ripple-33 {
    from {
      transform: scale(0);
      opacity: 1;
    }
    to {
      opacity: 0;
      transform: scale(20);
    }
  }
/* </style> */
